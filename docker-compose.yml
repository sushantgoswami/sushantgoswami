
# cat docker-compose.yml
version: "3.5"
services:

  # WEB PROXY
  traefik:
    image: "traefik:v2.2"
    restart: ${RESTART_POLICY}
    command:
      - "--log.level=${LOG_LEVEL}"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--entrypoints.web.address=:${WEB_HTTP_PORT}"
      - "--entrypoints.websecure.address=:${WEB_HTTPS_PORT}"
    ports:
      - '${WEB_HTTP_PORT}:80'
      - '${WEB_HTTPS_PORT}:443'
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "${WEB_CONFIG}/cert.yml:/etc/traefik/dynamic/certs-traefik.yaml"
      - ${SSL}/wildcard-picomto.com.crt:/etc/certs/wildcard-picomto.com.crt
      - ${SSL}/wildcard-picomto.com.key:/etc/certs/wildcard-picomto.com.key
    networks:
      - frontend

  # PICOMTO API
  api:
    image: ${DOCKER_REGISTRY_DOMAIN}/${DOCKER_REGISTRY_PICOMTO_PATH}
    restart: ${RESTART_POLICY}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${API_URL}`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,PUT,POST,DELETE,PATCH,OPTIONS"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworigin=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowheaders=Origin,Range,Content-Type,Accept,Authorization"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"
      - "traefik.http.routers.api.middlewares=cors@docker"
      - "traefik.docker.network=picomto-frontend"
    entrypoint:
      - /var/www/html/docker-entrypoint.sh
    environment:
      - LICENSE=${LICENSE}
      - DATABASE_HOST=${API_DATABASE_HOST}
      - DATABASE_DBNAME=${API_DATABASE_DBNAME}
      - DATABASE_USERNAME=${API_DATABASE_USERNAME}
      - DATABASE_PWD=${API_DATABASE_PWD}
      - API_URL=${API_URL}
      - API_DOCKER_SERVICE_URL=${API_DOCKER_SERVICE_URL}  #ONLY IF NOT AVAILABLE THROUGH DNS
      - FRONT_FR_URL=${FRONT_FR_URL}
      - FRONT_EN_URL=${FRONT_EN_URL}
      - MEETING_URL=${MEETING_URL}
      - PROD=${PROD}
      - MEMCACHE_SERVICE_URL=${API_MEMCACHE_SERVICE_URL}
      - SOLR_SERVICE_URL=${SOLR_SERVICE_URL}
      - SMTP_SENDER=${SMTP_SENDER}
    volumes:
      - ${API_ROOT_DIRECTORY}:/var/www/html
      - ${API_CACHE_DIRECTORY}:/var/www/html/cache
      - ${WEB_CONFIG}/httpd.conf:/etc/apache2/sites-enabled/000-default.conf
      - ${WEB_CONFIG}/api_factories.yml:/tmp/api_factories.yml
      - ${WEB_CONFIG}/picomto.key:/var/www/html/picomto.key
      - ${CLIENT_ROOT_DIRECTORY}:/var/www/html/lib/peoplbrain-api-php-client
      - ${LOG_DIRECTORY}/api/apache:/var/log/apache2/
      - ${LOG_DIRECTORY}/api/picomto:/var/www/html/log/
      - ${SSL}/wildcard-picomto.com.crt:/etc/ssl/certs/wildcard-picomto.com.crt
      - ${SSL}/wildcard-picomto.com.key:/etc/ssl/private/wildcard-picomto.com.key
      - ${SSL}/chain-picomto.com:/etc/ssl/certs/chain-picomto.com
      - ${API_DATA}/:/var/www/html/web/${LICENSE}
    expose:
      - 80
      - 443
    networks:
      - frontend
      - backend

  # PICOMTO FRONTEND APP
  front:
    image: ${DOCKER_REGISTRY_DOMAIN}/${DOCKER_REGISTRY_PICOMTO_PATH}
    restart: ${RESTART_POLICY}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`${FRONT_FR_URL}`,`${FRONT_EN_URL}`)"
      - "traefik.http.routers.front.entrypoints=websecure"
      - "traefik.http.routers.front.tls=true"
      - "traefik.docker.network=picomto-frontend"
    entrypoint:
      - /var/www/html/docker-entrypoint.sh
    environment:
      - LICENSE=${LICENSE}
      - PROD=${PROD}
      - DATABASE_HOST=${FRONT_DATABASE_HOST}
      - DATABASE_DBNAME=${FRONT_DATABASE_DBNAME}
      - DATABASE_USERNAME=${FRONT_DATABASE_USERNAME}
      - DATABASE_PWD=${FRONT_DATABASE_PWD}
      - API_URL=${API_URL}
      - API_DOCKER_SERVICE_URL=${API_DOCKER_SERVICE_URL}
      - MEMCACHE_SERVICE_URL=${FRONT_MEMCACHE_SERVICE_URL}
      - FRONT_FR_URL=${FRONT_FR_URL}
      - FRONT_EN_URL=${FRONT_EN_URL}
    volumes:
      - ${FRONT_ROOT_DIRECTORY}:/var/www/html
      - ${FRONT_CACHE_DIRECTORY}:/var/www/html/cache
      - ${WEB_CONFIG}/httpd.conf:/etc/apache2/sites-enabled/000-default.conf
      - ${WEB_CONFIG}/front_factories.yml:/tmp/front_factories.yml
      - ${WEB_CONFIG}/picomto.key:/var/www/html/picomto.key
      - ${WEB_CONFIG}/saml.xml:/var/www/html/config/saml.xml
      - ${LOG_DIRECTORY}/front/:/var/log/apache2/
      - ${CLIENT_ROOT_DIRECTORY}:/var/www/html/lib/vendor/peoplbrain-api-php-client
      - ${SSL}/wildcard-picomto.com.crt:/etc/ssl/certs/wildcard-picomto.com.crt
      - ${SSL}/wildcard-picomto.com.key:/etc/ssl/private/wildcard-picomto.com.key
      - ${SSL}/chain-picomto.com:/etc/ssl/certs/chain-picomto.com
      - ${PHP_SESSION_DIR}/:/tmp
    expose:
      - 80
      - 443
    networks:
      - frontend
      - backend

  # SOLR SERVER
  solr:
    image: openjdk:8-jdk
    restart: ${RESTART_POLICY}
    entrypoint:
      - /solr/solr-entrypoint.sh
    volumes:
      - ${API_ROOT_DIRECTORY}/lib/solr4:/solr
      - ${LOG_DIRECTORY}/solr/:/log/
      - ${SOLR_DATA}/:/var/www/lib/solr4/cores/solr/${LICENSE}/data
    ports:
      - ${SOLR_PORT}:8984
    networks:
      - backend

  # API DATABASE
  db_api:
    image: mysql/mysql-server:5.7
    restart: ${RESTART_POLICY}
    environment:
      - MYSQL_DATABASE=${API_DATABASE_DBNAME}
      - MYSQL_USER=${API_DATABASE_USERNAME}
      - MYSQL_PASSWORD=${API_DATABASE_PWD}
      - MYSQL_ROOT_PASSWORD=${API_DATABASE_PWD}
    volumes:
      - ${DB_DATA}/api:/var/lib/mysql
    networks:
      - backend

  # FRONT DATABASE
  db_front:
    image: mysql/mysql-server:5.7
    restart: ${RESTART_POLICY}
    environment:
      - MYSQL_DATABASE=${FRONT_DATABASE_DBNAME}
      - MYSQL_USER=${FRONT_DATABASE_USERNAME}
      - MYSQL_PASSWORD=${FRONT_DATABASE_PWD}
      - MYSQL_ROOT_PASSWORD=${FRONT_DATABASE_PWD}
    volumes:
      - ${DB_DATA}/front:/var/lib/mysql
    networks:
      - backend

  # MEMCACHE SERVER
  memcache:
    image: memcached
    restart: ${RESTART_POLICY}
    networks:
      - backend

networks:
  backend:
    driver: bridge
    name: picomto-backend
  frontend:
    driver: bridge
    name: picomto-frontend

